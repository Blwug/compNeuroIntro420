* DE Introduction

  To be able to evaluate lisp in babel blocks you must invoke slime. 
  #+begin_src lisp :results output
  (format t "~a~%" (list 1 2 3))
  #+end_src

  #+RESULTS:
  : (1 2 3)

  
** Can I make a simple plot?

*** First we need a bunch of stuff
    #+begin_src lisp
	   ;; will need some packages/systems I am sure.
	   ;; will try gnuplot -- need to install that package
	   ;; and eazy-gnuplot
      (ql:quickload '(:eazy-gnuplot :clml.statistics :clml.utility))
      (use-package :eazy-gnuplot) 
    #+end_src

    #+RESULTS:
    : T

*** Now a basic example?
    [[https://guicho271828.github.io/eazy-gnuplot/][Here]] is a "cookbook".

    The examples make use of a local subdirectory called "images". Create it.

    The first cookbook example seems to use a function we don't need: ~png-from-file~. This is probably related to the cookbook being a jupyter notebook.

    #+begin_src lisp :results graphics file :file "./images/function-plot.png" 
      (defun function-plot (output)
	(with-plots (*standard-output* :debug nil)
	  (gp-setup :terminal '(pngcairo) :output output)
	  (func-plot "[-5:5] (sin(1/x) - cos(x))*erfc(x)"))
	output)
      (function-plot "images/function-plot.png")
    #+end_src

    #+RESULTS:
    [[file:./images/function-plot.png]]

*** Scatter Plot Example
    #+begin_src lisp :results graphics file :file "./images/scatter-plot.png"
      (defun scatter-plot (output)
	(let ((point-n 400)
	      (point-type 7)
	      (point-color "orange"))
	  (with-plots (*standard-output* :debug nil)
	    (gp-setup :terminal '(pngcairo) :output output)
	    (plot
	     (lambda ()
	       (loop for p in (map 'list (lambda (x y) (list x y))
				 (clml.statistics:rand-n
				  (clml.statistics:chi-square-distribution 100) point-n)
				 (clml.statistics:rand-n
				  (clml.statistics:chi-square-distribution 10) point-n))
		   do (format t "~&~{~a~^ ~}" p)))
	     :with `(:points :pt ,point-type :lc :rgb ,point-color)))
	output))
       (scatter-plot "./images/scatter-plot.png")
    #+end_src

    #+RESULTS:
    [[file:./images/scatter-plot.png]]

